{"mode": "single_doc-classification", "metadata": {"ignore_records": true}, "validation_rules": [{"rule_id": "5b9eae51-e03b-49e6-b138-013b505c1981", "rule_name": "Name Confidence", "conditions": [{"condition_id": "4e4475e1-897a-4859-a63c-d353f19c4d59", "type": "confidence", "affected_fields": ["Name"], "class_affected_fields": [{"class": "Medical Report", "field": "Name"}], "params": {"threshold": 0.7}, "msg": {"standard": "Actual confidence {} was below the configured threshold 0.7", "custom": {"msg": "Actual confidence {} was below the configured threshold 0.7", "enabled": false}}, "alert_level": "failure", "position": {"x": 115, "y": 115}}], "edges": [{"edge_id": "d5d5a059-21bd-48ff-8177-bd898d60a028", "source": "4e4475e1-897a-4859-a63c-d353f19c4d59", "target": null, "result": "pass"}, {"edge_id": "7f6869c6-8a9f-4974-bb4a-369a4b6cba15", "source": "4e4475e1-897a-4859-a63c-d353f19c4d59", "target": null, "result": "fail"}]}, {"rule_id": "5c0c113f-fc8b-4a07-bf56-f71b816e7922", "rule_name": "Date of Medical Examination Confidence", "conditions": [{"condition_id": "a4af0db8-5826-4272-823e-c7127fb9b367", "type": "confidence", "affected_fields": ["Date_of_Medical_Examination"], "class_affected_fields": [{"class": "Medical Report", "field": "Date_of_Medical_Examination"}], "params": {"threshold": 0.8}, "msg": {"standard": "Actual confidence {} was below the configured threshold 0.8", "custom": {"msg": "Actual confidence {} was below the configured threshold 0.8", "enabled": false}}, "alert_level": "failure", "position": {"x": 115, "y": 115}}], "edges": [{"edge_id": "d8031995-ba82-4f21-a172-afd6c29b91c7", "source": "a4af0db8-5826-4272-823e-c7127fb9b367", "target": null, "result": "pass"}, {"edge_id": "4faacda0-4329-4960-8f4f-c9223259206a", "source": "a4af0db8-5826-4272-823e-c7127fb9b367", "target": null, "result": "fail"}]}, {"rule_id": "7fddd669-9fbf-42a5-8fe3-858896a1eb1c", "rule_name": "Time Taken off Work Confidence", "conditions": [{"condition_id": "f40892c8-8118-4656-96fe-230e4d710e3d", "type": "confidence", "affected_fields": ["Time_Taken_off_Work"], "class_affected_fields": [{"class": "Medical Report", "field": "Time_Taken_off_Work"}], "params": {"threshold": 0.8}, "msg": {"standard": "Actual confidence {} was below the configured threshold 0.8", "custom": {"msg": "Actual confidence {} was below the configured threshold 0.8", "enabled": false}}, "alert_level": "failure", "position": {"x": 115, "y": 115}}], "edges": [{"edge_id": "0c559ac4-91ad-440d-92f3-877d0ac8ea29", "source": "f40892c8-8118-4656-96fe-230e4d710e3d", "target": null, "result": "pass"}, {"edge_id": "fff5b41b-8df3-4693-ae27-137d5079aa0f", "source": "f40892c8-8118-4656-96fe-230e4d710e3d", "target": null, "result": "fail"}]}, {"rule_id": "43d1fa38-2822-4498-a72e-912ea9495246", "rule_name": "Time to Treatment Confidence", "conditions": [{"condition_id": "87fe1c61-bb4e-4099-8439-47ae46e3d30d", "type": "confidence", "affected_fields": ["Time_to_Treatment"], "class_affected_fields": [{"class": "Medical Report", "field": "Time_to_Treatment"}], "params": {"threshold": 0.95}, "msg": {"standard": "Actual confidence {} was below the configured threshold 0.95", "custom": {"msg": "Actual confidence {} was below the configured threshold 0.95", "enabled": false}}, "alert_level": "failure", "position": {"x": 115, "y": 115}}], "edges": [{"edge_id": "c76c78c8-4ef3-4933-b660-6a3a2a033798", "source": "87fe1c61-bb4e-4099-8439-47ae46e3d30d", "target": null, "result": "pass"}, {"edge_id": "62d49fe3-0e33-48e3-9690-f1dc51bcf67d", "source": "87fe1c61-bb4e-4099-8439-47ae46e3d30d", "target": null, "result": "fail"}]}, {"rule_id": "38506ff7-a16c-4eee-8904-296c29ad8c49", "rule_name": "Exceptional Uplift Requested Confidence", "conditions": [{"condition_id": "80f37884-e9bc-41e7-97e5-a32c01697bfa", "type": "confidence", "affected_fields": ["Exceptional_Uplift_Requested"], "class_affected_fields": [{"class": "Medical Report", "field": "Exceptional_Uplift_Requested"}], "params": {"threshold": 0.8}, "msg": {"standard": "Actual confidence {} was below the configured threshold 0.8", "custom": {"msg": "Actual confidence {} was below the configured threshold 0.8", "enabled": false}}, "alert_level": "failure", "position": {"x": 115, "y": 115}}], "edges": [{"edge_id": "fbade8c5-0e54-4fe6-8898-49139b8e4d8b", "source": "80f37884-e9bc-41e7-97e5-a32c01697bfa", "target": null, "result": "pass"}, {"edge_id": "42a7afa4-8e8b-4aae-b9f0-a660af2e88ee", "source": "80f37884-e9bc-41e7-97e5-a32c01697bfa", "target": null, "result": "fail"}]}, {"rule_id": "cd3f7ccf-ee28-4977-ace9-9eff3810685f", "rule_name": "Exceptional Uplift Justification Confidence", "conditions": [{"condition_id": "d2f4e2b9-33fa-467e-b8ad-4f9de400c861", "type": "confidence", "affected_fields": ["Exceptional_Uplift_Justification"], "class_affected_fields": [{"class": "Medical Report", "field": "Exceptional_Uplift_Justification"}], "params": {"threshold": 0.7}, "msg": {"standard": "Actual confidence {} was below the configured threshold 0.7", "custom": {"msg": "Actual confidence {} was below the configured threshold 0.7", "enabled": false}}, "alert_level": "failure", "position": {"x": 115, "y": 115}}], "edges": [{"edge_id": "d1150ef3-9fb2-4ffa-9e04-fd55b173c72e", "source": "d2f4e2b9-33fa-467e-b8ad-4f9de400c861", "target": null, "result": "pass"}, {"edge_id": "528b0661-48cc-4c3a-8871-64d9f8c17d4a", "source": "d2f4e2b9-33fa-467e-b8ad-4f9de400c861", "target": null, "result": "fail"}]}, {"rule_id": "e1f1ba5a-e66d-4280-a513-d09bad2e0903", "rule_name": "Expert Last Name Confidence", "conditions": [{"condition_id": "627a76b8-e640-4a60-9d5d-a75b5bacaabd", "type": "confidence", "affected_fields": ["Expert_Last_Name"], "class_affected_fields": [{"class": "Medical Report", "field": "Expert_Last_Name"}], "params": {"threshold": 0.8}, "msg": {"standard": "Actual confidence {} was below the configured threshold 0.8", "custom": {"msg": "Actual confidence {} was below the configured threshold 0.8", "enabled": false}}, "alert_level": "failure", "position": {"x": 115, "y": 115}}], "edges": [{"edge_id": "351e3bdc-494b-465e-93f9-f157d8ae148d", "source": "627a76b8-e640-4a60-9d5d-a75b5bacaabd", "target": null, "result": "pass"}, {"edge_id": "0d712020-a40b-4184-abd8-e575761ad5fb", "source": "627a76b8-e640-4a60-9d5d-a75b5bacaabd", "target": null, "result": "fail"}]}, {"rule_id": "be145868-08f3-4140-aa91-ee2d863b34ce", "rule_name": "Solicitor Company Confidence", "conditions": [{"condition_id": "308e1aa6-eb39-4823-878f-7db8ab676934", "type": "confidence", "affected_fields": ["Solicitor_Company"], "class_affected_fields": [{"class": "Medical Report", "field": "Solicitor_Company"}], "params": {"threshold": 0.7}, "msg": {"standard": "Actual confidence {} was below the configured threshold 0.7", "custom": {"msg": "Actual confidence {} was below the configured threshold 0.7", "enabled": false}}, "alert_level": "failure", "position": {"x": 115, "y": 115}}], "edges": [{"edge_id": "a6508e05-c96f-43a6-bdf8-f01d9010c744", "source": "308e1aa6-eb39-4823-878f-7db8ab676934", "target": null, "result": "pass"}, {"edge_id": "7c8e844e-a405-444b-9b8d-88f2e4b36f63", "source": "308e1aa6-eb39-4823-878f-7db8ab676934", "target": null, "result": "fail"}]}, {"rule_id": "490f2d3f-873d-4927-aefc-d56ca86f84c1", "rule_name": "Postal Code UDF", "conditions": [{"condition_id": "5005bc03-be5e-4466-93d4-16baaa53f08d", "type": "lambda_code", "affected_fields": ["Postal_Code"], "class_affected_fields": [{"class": "Medical Report", "field": "Postal_Code"}], "params": {"code": "\n\ndef validate_uk_postal_code(Postal_Code, context = {}, keys = {}, **kwargs):\n\timport re\n\t\n\tpattern = r'(GIR 0AA)|((([A-Z][0-9]{1,2})|(([A-Z][A-HJ-Y][0-9]{1,2})|(([A-Z][0-9][A-Z])|([A-Z][A-HJ-Y][0-9][A-Z]?))))\\s?[0-9][A-Z]{2})'\n\t\n\tif Postal_Code == 'N/A':\n\t  return None\n\telif re.match(pattern, Postal_Code):\n\t  return None\n\t  \n\tprint(f'Postal_Code: {Postal_Code!r}')\n\treturn 'Invalid UK postal code format!'\n\t", "fn_name": "validate_uk_postal_code", "args": [{"name": "Postal_Code", "data_type": "FIELD", "value": "Postal Code"}], "lambda_udf_id": "v1:AWS_LAMBDA:6779585453:insaprd-use2-aihub-prd-docker-default-udf:8"}, "msg": {"standard": null, "custom": {"msg": null, "enabled": false}}, "alert_level": "failure", "position": {"x": 115, "y": 115}}], "edges": [{"edge_id": "8117c2a2-50ee-48fb-861a-f44aebea605a", "source": "5005bc03-be5e-4466-93d4-16baaa53f08d", "target": null, "result": "pass"}, {"edge_id": "71463e9f-485a-4956-b6a8-802e36ab7814", "source": "5005bc03-be5e-4466-93d4-16baaa53f08d", "target": null, "result": "fail"}]}, {"rule_id": "bae2784e-0367-45ae-b6cb-b8bf59ba3021", "rule_name": "Patient Occupation UDF", "conditions": [{"condition_id": "ddc96548-5024-4535-a8dc-b3a05f49a5ae", "type": "lambda_code", "affected_fields": ["Patient_Occupation"], "class_affected_fields": [{"class": "Medical Report", "field": "Patient_Occupation"}], "params": {"code": "\n\ndef validate_occupation(Patient_Occupation, context = {}, keys = {}, **kwargs):\n\tvalid_values = ['Driver', 'Non-Physical / Office', 'Physical', 'Retail / Mobile Work', 'Retired', 'Unemployed']\n\t\n\tif Patient_Occupation in valid_values:\n\t\treturn None\n\telse:\n\t\tprint(f'Patient_Occupation: {Patient_Occupation!r}')\n\t\treturn \"Error: Invalid Patient Occupation value!\"\n\t", "fn_name": "validate_occupation", "args": [{"name": "Patient_Occupation", "data_type": "FIELD", "value": "Patient Occupation"}], "lambda_udf_id": "v1:AWS_LAMBDA:3220078585:insaprd-use2-aihub-prd-docker-default-udf:8"}, "msg": {"standard": null, "custom": {"msg": null, "enabled": false}}, "alert_level": "failure", "position": {"x": 115, "y": 115}}], "edges": [{"edge_id": "00f39c2a-ce86-4c14-bddf-995274dd7c65", "source": "ddc96548-5024-4535-a8dc-b3a05f49a5ae", "target": null, "result": "pass"}, {"edge_id": "5bf7eeb7-ed5d-481e-8e23-009441728569", "source": "ddc96548-5024-4535-a8dc-b3a05f49a5ae", "target": null, "result": "fail"}]}, {"rule_id": "dc7b3eca-e993-4fbd-b354-30e2d5a4edd8", "rule_name": "Date of Medical Examination UDF", "conditions": [{"condition_id": "99674042-9a82-4b93-bd85-71e549f5ceaf", "type": "lambda_code", "affected_fields": ["Date_of_Medical_Examination"], "class_affected_fields": [{"class": "Medical Report", "field": "Date_of_Medical_Examination"}], "params": {"code": "\n\ndef validate_date(Date_of_Medical_Examination, context = {}, keys = {}, **kwargs):\n\timport contextlib\n\tfrom datetime import datetime as dt\n\t\n\tif Date_of_Medical_Examination == 'N/A':\n\t\treturn None\n\t\n\telse:\n\t\twith contextlib.suppress(ValueError):\n\t\t\tdate = dt.strptime(Date_of_Medical_Examination, '%d/%m/%Y')\n\t\t\tif date <= dt.now():\n\t\t\t\treturn None\n\t\n\tprint(f'Date_of_Medical_Examination: {Date_of_Medical_Examination!r}')\n\treturn \"Error: Invalid Date of Medical Examination value!\"\n\t", "fn_name": "validate_date", "args": [{"name": "Date_of_Medical_Examination", "data_type": "FIELD", "value": "Date of Medical Examination"}], "lambda_udf_id": "v1:AWS_LAMBDA:8026587936:insaprd-use2-aihub-prd-docker-default-udf:8"}, "msg": {"standard": null, "custom": {"msg": null, "enabled": false}}, "alert_level": "failure", "position": {"x": 115, "y": 115}}], "edges": [{"edge_id": "c30db5f8-9697-4660-a2d6-b9933e4c8427", "source": "99674042-9a82-4b93-bd85-71e549f5ceaf", "target": null, "result": "pass"}, {"edge_id": "32cb3bc1-552e-40b1-84f1-4b87f5ca7aa2", "source": "99674042-9a82-4b93-bd85-71e549f5ceaf", "target": null, "result": "fail"}]}, {"rule_id": "0ff24f3e-e5f8-4003-88c3-cb7ab05b7653", "rule_name": "Claimant Involved in a Previous Accident UDF", "conditions": [{"condition_id": "ec0e7579-e168-404d-be68-0ba984080cac", "type": "lambda_code", "affected_fields": ["Claimant_Involved_in_a_Previous_Accident"], "class_affected_fields": [{"class": "Medical Report", "field": "Claimant_Involved_in_a_Previous_Accident"}], "params": {"code": "\n\ndef validate_prev_accident(Claimant_Involved_in_a_Previous_Accident, context = {}, keys = {}, **kwargs):\n\tvalid_values = ['Yes', 'No']\n\t\n\tif Claimant_Involved_in_a_Previous_Accident in valid_values:\n\t\treturn None\n\telse:\n\t\tprint(f'Claimant_Involved_in_a_Previous_Accident: {Claimant_Involved_in_a_Previous_Accident!r}')\n\t\treturn \"Error: Invalid Claimant Involved in a Previous_Accident value!\"\n\t", "fn_name": "validate_prev_accident", "args": [{"name": "Claimant_Involved_in_a_Previous_Accident", "data_type": "FIELD", "value": "Claimant Involved in a Previous Accident"}], "lambda_udf_id": "v1:AWS_LAMBDA:1250971893:insaprd-use2-aihub-prd-docker-default-udf:8"}, "msg": {"standard": null, "custom": {"msg": null, "enabled": false}}, "alert_level": "failure", "position": {"x": 115, "y": 115}}], "edges": [{"edge_id": "16facc47-6dc5-4efa-8696-e897e53fc1bb", "source": "ec0e7579-e168-404d-be68-0ba984080cac", "target": null, "result": "pass"}, {"edge_id": "bb12d02c-5854-40e3-b033-2290d46c07e6", "source": "ec0e7579-e168-404d-be68-0ba984080cac", "target": null, "result": "fail"}]}, {"rule_id": "ad634dad-b1e8-4860-beda-93f1764d0311", "rule_name": "Time Taken off Work UDF", "conditions": [{"condition_id": "c33c539a-8cca-49bc-8a52-c9687c3b1d23", "type": "lambda_code", "affected_fields": ["Time_Taken_off_Work"], "class_affected_fields": [{"class": "Medical Report", "field": "Time_Taken_off_Work"}], "params": {"code": "\n\ndef validate_time(Time_Taken_off_Work, context = {}, keys = {}, **kwargs):\n\tvalid_values = ['None', 'Not Known', 'Less than a week', '1-2 weeks', '2-4 weeks', '1 month', '6 weeks', '2 months', '3 months', '4 months', '5 months', '6 months', '7 months', '8 months', '9 months', '10 months', '11 months', '12 months', '13 months', '14 months', '15 months', '16 months', '17 months', '18 months', '19 months', '20 months', '21 months', '22 months', '23 months', '24 months', 'Not applicable']\n\t\n\tif Time_Taken_off_Work in valid_values:\n\t\treturn None\n\telse:\n\t\tprint(f'Time_Taken_off_Work: {Time_Taken_off_Work!r}')\n\t\treturn \"Error: Invalid Time Taken off Work value!\"\n\t", "fn_name": "validate_time", "args": [{"name": "Time_Taken_off_Work", "data_type": "FIELD", "value": "Time Taken off Work"}], "lambda_udf_id": "v1:AWS_LAMBDA:2377158451:insaprd-use2-aihub-prd-docker-default-udf:8"}, "msg": {"standard": null, "custom": {"msg": null, "enabled": false}}, "alert_level": "failure", "position": {"x": 115, "y": 115}}], "edges": [{"edge_id": "4b1f7233-4662-4296-a068-1c67d172b205", "source": "c33c539a-8cca-49bc-8a52-c9687c3b1d23", "target": null, "result": "pass"}, {"edge_id": "4ebf0e59-ea44-4f34-bf70-f865f7eadf56", "source": "c33c539a-8cca-49bc-8a52-c9687c3b1d23", "target": null, "result": "fail"}]}, {"rule_id": "eb269e3c-61a6-49dc-923e-0174a82b58a8", "rule_name": "Hobbies Affected UDF", "conditions": [{"condition_id": "fab0877e-d260-4214-bb7e-091391363c15", "type": "lambda_code", "affected_fields": ["Hobbies_Affected"], "class_affected_fields": [{"class": "Medical Report", "field": "Hobbies_Affected"}], "params": {"code": "\n\ndef validate_hobbies_affected(Hobbies_Affected, context = {}, keys = {}, **kwargs):\n\tvalid_values = ['Yes', 'No', 'Not Known']\n\t\n\tif Hobbies_Affected in valid_values:\n\t\treturn None\n\telse:\n\t\tprint(f'Hobbies_Affected: {Hobbies_Affected!r}')\n\t\treturn \"Error: Invalid Hobbies Affected value!\"\n\t", "fn_name": "validate_hobbies_affected", "args": [{"name": "Hobbies_Affected", "data_type": "FIELD", "value": "Hobbies Affected"}], "lambda_udf_id": "v1:AWS_LAMBDA:3171630319:insaprd-use2-aihub-prd-docker-default-udf:8"}, "msg": {"standard": null, "custom": {"msg": null, "enabled": false}}, "alert_level": "failure", "position": {"x": 115, "y": 115}}], "edges": [{"edge_id": "4bcab8cd-5975-4547-979d-e9cebbe54a57", "source": "fab0877e-d260-4214-bb7e-091391363c15", "target": null, "result": "pass"}, {"edge_id": "a62e13d9-2aee-450b-b202-3266bd5ff213", "source": "fab0877e-d260-4214-bb7e-091391363c15", "target": null, "result": "fail"}]}, {"rule_id": "03e528ae-c8eb-412c-a6c9-9fa1fc424e10", "rule_name": "Domestic Duties Affected UDF", "conditions": [{"condition_id": "390df76d-700e-41f6-9d5a-44a17361dec8", "type": "lambda_code", "affected_fields": ["Domestic_Duties_Affected"], "class_affected_fields": [{"class": "Medical Report", "field": "Domestic_Duties_Affected"}], "params": {"code": "\n\ndef validate_duties_affected(Domestic_Duties_Affected, context = {}, keys = {}, **kwargs):\n\tvalid_values = ['Yes', 'No', 'Not Known', 'Not Applicable']\n\t\n\tif Domestic_Duties_Affected in valid_values:\n\t\treturn None\n\telse:\n\t\tprint(f'Domestic_Duties_Affected: {Domestic_Duties_Affected!r}')\n\t\treturn \"Error: Invalid Domestic Duties Affected value!\"\n\t", "fn_name": "validate_duties_affected", "args": [{"name": "Domestic_Duties_Affected", "data_type": "FIELD", "value": "Domestic Duties Affected"}], "lambda_udf_id": "v1:AWS_LAMBDA:2368973363:insaprd-use2-aihub-prd-docker-default-udf:8"}, "msg": {"standard": null, "custom": {"msg": null, "enabled": false}}, "alert_level": "failure", "position": {"x": 115, "y": 115}}], "edges": [{"edge_id": "74f6dd03-b6b2-4b58-b7bf-11dcfa2cbd10", "source": "390df76d-700e-41f6-9d5a-44a17361dec8", "target": null, "result": "pass"}, {"edge_id": "c9a18eda-833e-4a00-8ba6-974718982835", "source": "390df76d-700e-41f6-9d5a-44a17361dec8", "target": null, "result": "fail"}]}, {"rule_id": "32c25cbb-907e-4c08-9583-aeb0383fafe2", "rule_name": "Injury Body Parts UDF", "conditions": [{"condition_id": "e313bdd5-1ada-41c2-b5d1-7048843f6d6f", "type": "lambda_code", "affected_fields": ["Injury_Body_Parts"], "class_affected_fields": [{"class": "Medical Report", "field": "Injury_Body_Parts"}], "params": {"code": "\n\ndef validate_injury_body_parts(Injury_Body_Parts, context = {}, keys = {}, **kwargs):\n\timport traceback\n\t\n\ttry:\n\t\timport json\n\t\n\t\tInjury_Body_Parts = json.loads(Injury_Body_Parts)\n\t\n\t\tvalid_values = ['Ankle', 'Arm', 'Back', 'Chest', 'Ears', 'Elbow', 'Eyes', 'Face', 'Fingers', 'Foot', 'Fore arm', 'Groin', 'Hand', 'Head', 'Hips', 'Knee', 'Legs', 'Lower back', 'Lower leg', 'Mouth', 'Neck', 'Nose', 'Organs', 'Other', 'Psychological', 'Ribs', 'Shoulder', 'Stomach', 'Thumb', 'Thumb and fingers', 'Toes', 'Torso', 'Upper arm', 'Upper back', 'Upper leg', 'Wrist']\n\t\n\t\tfor value in Injury_Body_Parts:\n\t\t\tif value not in valid_values:\n\t\t\t\treturn \"Error: Invalid Injury Body Parts value!\"\n\t\n\t\treturn None\n\t\n\texcept Exception as e:\n\t\tprint(traceback.format_exc())\n\t\treturn f\"Error: {e}\"\n\t\t", "fn_name": "validate_injury_body_parts", "args": [{"name": "Injury_Body_Parts", "data_type": "FIELD", "value": "Injury Body Parts"}], "lambda_udf_id": "v1:AWS_LAMBDA:4944511233:insaprd-use2-aihub-prd-docker-default-udf:8"}, "msg": {"standard": null, "custom": {"msg": null, "enabled": false}}, "alert_level": "failure", "position": {"x": 115, "y": 115}}], "edges": [{"edge_id": "ce31e3a1-ba06-4265-bc49-4fb3299d2be5", "source": "e313bdd5-1ada-41c2-b5d1-7048843f6d6f", "target": null, "result": "pass"}, {"edge_id": "8dc9f0d3-d358-45b8-b1ed-3d07c99b1bbc", "source": "e313bdd5-1ada-41c2-b5d1-7048843f6d6f", "target": null, "result": "fail"}]}, {"rule_id": "7a9e092b-ff4d-406f-be3f-7193bdcf661d", "rule_name": "Injury Dominant Body Part UDF", "conditions": [{"condition_id": "b911762c-07e4-4c4d-81fd-f747b72e6afb", "type": "lambda_code", "affected_fields": ["Injury_Dominant_Body_Part"], "class_affected_fields": [{"class": "Medical Report", "field": "Injury_Dominant_Body_Part"}], "params": {"code": "\n\ndef validate_dominant_part(Injury_Dominant_Body_Part, context = {}, keys = {}, **kwargs):\n\tvalid_values = ['Yes', 'No', 'Not Known']\n\t\n\tif Injury_Dominant_Body_Part in valid_values:\n\t\treturn None\n\telse:\n\t\tprint(f'Injury_Dominant_Body_Part: {Injury_Dominant_Body_Part!r}')\n\t\treturn \"Error: Invalid Injury Dominant Body Part value!\"\n\t", "fn_name": "validate_dominant_part", "args": [{"name": "Injury_Dominant_Body_Part", "data_type": "FIELD", "value": "Injury Dominant Body Part"}], "lambda_udf_id": "v1:AWS_LAMBDA:2451165199:insaprd-use2-aihub-prd-docker-default-udf:8"}, "msg": {"standard": null, "custom": {"msg": null, "enabled": false}}, "alert_level": "failure", "position": {"x": 115, "y": 115}}], "edges": [{"edge_id": "a3897c64-a3c2-4ec7-9bd6-6bd4598fb2ab", "source": "b911762c-07e4-4c4d-81fd-f747b72e6afb", "target": null, "result": "pass"}, {"edge_id": "2891855c-69f1-473b-b692-9af7a878524e", "source": "b911762c-07e4-4c4d-81fd-f747b72e6afb", "target": null, "result": "fail"}]}, {"rule_id": "fc6da084-37b6-4a0f-8953-329a607e9471", "rule_name": "Previous Injury UDF", "conditions": [{"condition_id": "fa4baf4f-bdca-4eab-a685-314868630865", "type": "lambda_code", "affected_fields": ["Previous_Injury"], "class_affected_fields": [{"class": "Medical Report", "field": "Previous_Injury"}], "params": {"code": "\n\ndef validate_prev_injury(Previous_Injury, context = {}, keys = {}, **kwargs):\n\tvalid_values = ['Yes', 'No']\n\t\n\tif Previous_Injury in valid_values:\n\t\treturn None\n\telse:\n\t\tprint(f'Previous_Injury: {Previous_Injury!r}')\n\t\treturn \"Error: Invalid Previous Injury value!\"\n\t", "fn_name": "validate_prev_injury", "args": [{"name": "Previous_Injury", "data_type": "FIELD", "value": "Previous Injury"}], "lambda_udf_id": "v1:AWS_LAMBDA:2307415458:insaprd-use2-aihub-prd-docker-default-udf:8"}, "msg": {"standard": null, "custom": {"msg": null, "enabled": false}}, "alert_level": "failure", "position": {"x": 115, "y": 115}}], "edges": [{"edge_id": "7290d86a-277f-4c04-b9e4-0b58db257ed0", "source": "fa4baf4f-bdca-4eab-a685-314868630865", "target": null, "result": "pass"}, {"edge_id": "fd574375-9273-4f79-9883-6b9d8577cfd3", "source": "fa4baf4f-bdca-4eab-a685-314868630865", "target": null, "result": "fail"}]}, {"rule_id": "94aab748-d761-439f-b731-c791786cdb20", "rule_name": "Injury Types UDF", "conditions": [{"condition_id": "c6aca4fe-4e34-48e5-a661-52c5c901466c", "type": "lambda_code", "affected_fields": ["Injury_Types"], "class_affected_fields": [{"class": "Medical Report", "field": "Injury_Types"}], "params": {"code": "\n\ndef validate_injury_types(Injury_Types, context = {}, keys = {}, **kwargs):\n\timport traceback\n\t\n\ttry:\n\t\timport json\n\t\n\t\tInjury_Types = json.loads(Injury_Types)\n\t\n\t\tvalid_values = ['Anxiety', 'Bruise', 'Burns', 'Concussion', 'Cuts', 'Dislocation', 'Dizziness', 'Fracture', 'Headache', 'PTSD', 'Paraesthesia', 'Paresthesia', 'Radiation/referred pain', 'Scarring', 'Sleep loss', 'Soft tissue', 'Soreness', 'Sprain', 'Swelling', 'Tinnitus', 'Tooth damage', 'Travel anxiety', 'Other']\n\t\n\t\tfor value in Injury_Types:\n\t\t\tif value not in valid_values:\n\t\t\t\treturn \"Error: Invalid Injury Types value!\"\n\t\n\t\treturn None\n\t\n\texcept Exception as e:\n\t\tprint(traceback.format_exc())\n\t\treturn f\"Error: {e}\"\n\t\t", "fn_name": "validate_injury_types", "args": [{"name": "Injury_Types", "data_type": "FIELD", "value": "Injury Types"}], "lambda_udf_id": "v1:AWS_LAMBDA:3580974004:insaprd-use2-aihub-prd-docker-default-udf:8"}, "msg": {"standard": null, "custom": {"msg": null, "enabled": false}}, "alert_level": "failure", "position": {"x": 115, "y": 115}}], "edges": [{"edge_id": "d1bd698c-4fc0-47d1-b376-2875a5eec9e3", "source": "c6aca4fe-4e34-48e5-a661-52c5c901466c", "target": null, "result": "pass"}, {"edge_id": "03776f28-07ae-4717-812d-601f306833af", "source": "c6aca4fe-4e34-48e5-a661-52c5c901466c", "target": null, "result": "fail"}]}, {"rule_id": "0b8afa0e-3ed3-4821-84ec-64aac6094a60", "rule_name": "Prognosis Period UDF", "conditions": [{"condition_id": "30b54958-4c69-41b0-b07b-3e2771206daf", "type": "lambda_code", "affected_fields": ["Prognosis_Period"], "class_affected_fields": [{"class": "Medical Report", "field": "Prognosis_Period"}], "params": {"code": "\n\ndef validate_period(Prognosis_Period, context = {}, keys = {}, **kwargs):\n\tif Prognosis_Period:\n\t\tif Prognosis_Period in ['Lifelong', 'Not Known']:\n\t\t\treturn None\n\t\n\t\tPrognosis_Period = Prognosis_Period.split(maxsplit=1)\n\t\n\t\tif len(Prognosis_Period) == 2:\n\t\t\tnumber, unit = Prognosis_Period\n\t\t\tif unit == 'Weeks' and number in map(str, range(1, 52+1)): \n\t\t\t\treturn None\n\t\t\telif unit == 'Months' and number in map(str, range(1, 36+1)):\n\t\t\t\treturn None\n\t\t\telif unit == 'Years' and number in map(str, range(1, 20+1)):\n\t\t\t\treturn None\n\t\n\tprint(f'Prognosis_Period: {Prognosis_Period!r}')\n\treturn \"Error: Invalid Prognosis Period value\"\n\t", "fn_name": "validate_period", "args": [{"name": "Prognosis_Period", "data_type": "FIELD", "value": "Prognosis Period"}], "lambda_udf_id": "v1:AWS_LAMBDA:2205051908:insaprd-use2-aihub-prd-docker-default-udf:8"}, "msg": {"standard": null, "custom": {"msg": null, "enabled": false}}, "alert_level": "failure", "position": {"x": 115, "y": 115}}], "edges": [{"edge_id": "4fe88a7a-fdf1-48d7-a6f8-ab969a2aa98b", "source": "30b54958-4c69-41b0-b07b-3e2771206daf", "target": null, "result": "pass"}, {"edge_id": "b307fefc-e5d0-45ce-a03d-1950ff8c787b", "source": "30b54958-4c69-41b0-b07b-3e2771206daf", "target": null, "result": "fail"}]}, {"rule_id": "d8f4dd69-8b03-4416-8a97-8599fe1f929e", "rule_name": "Treatment UDF", "conditions": [{"condition_id": "f8fad8b3-c5f5-4c5e-afb6-635332a63b24", "type": "lambda_code", "affected_fields": ["Treatment"], "class_affected_fields": [{"class": "Medical Report", "field": "Treatment"}], "params": {"code": "\n\ndef validate_treatment(Treatment, context = {}, keys = {}, **kwargs):\n\timport traceback\n\t\n\ttry:\n\t\timport json\n\t\n\t\tTreatment = json.loads(Treatment)\n\t\n\t\tvalid_values = ['CBT', 'Chiropractor', 'Medication (Not prescribed)', 'Physio', 'Prescribed medication', 'Self-exercise', 'Surgery', 'None', 'Not Known', 'Other']\n\t\n\t\tfor value in Treatment:\n\t\t\tif value not in valid_values:\n\t\t\t\treturn \"Error: Invalid Treatment value!\"\n\t\n\t\treturn None\n\t\n\texcept Exception as e:\n\t\tprint(traceback.format_exc())\n\t\treturn f\"Error: {e}\"\n\t\t", "fn_name": "validate_treatment", "args": [{"name": "Treatment", "data_type": "FIELD", "value": "Treatment"}], "lambda_udf_id": "v1:AWS_LAMBDA:1496266763:insaprd-use2-aihub-prd-docker-default-udf:8"}, "msg": {"standard": null, "custom": {"msg": null, "enabled": false}}, "alert_level": "failure", "position": {"x": 115, "y": 115}}], "edges": [{"edge_id": "cdaf6213-84db-4384-ad8d-aee17bb823a1", "source": "f8fad8b3-c5f5-4c5e-afb6-635332a63b24", "target": null, "result": "pass"}, {"edge_id": "4a8e58d8-f51b-402a-ba45-f81df4d611ee", "source": "f8fad8b3-c5f5-4c5e-afb6-635332a63b24", "target": null, "result": "fail"}]}, {"rule_id": "b34b862d-30cc-437e-af8b-2fbbfec09954", "rule_name": "Time to Treatment UDF", "conditions": [{"condition_id": "018746cd-07d5-4c1a-a0cd-c57250bd405d", "type": "lambda_code", "affected_fields": ["Time_to_Treatment"], "class_affected_fields": [{"class": "Medical Report", "field": "Time_to_Treatment"}], "params": {"code": "\n\ndef validate_time(Time_to_Treatment, context = {}, keys = {}, **kwargs):\n\tvalid_values = ['None', 'Not Known', 'Less than a week', '1-2 weeks', '2-4 weeks', '1 month', '6 weeks', '2 months', '3 months', '4 months', '5 months', '6 months', '7 months', '8 months', '9 months', '10 months', '11 months', '12 months', '13 months', '14 months', '15 months', '16 months', '17 months', '18 months', '19 months', '20 months', '21 months', '22 months', '23 months', '24 months', 'Not applicable']\n\t\n\tif Time_to_Treatment in valid_values:\n\t\treturn None\n\telse:\n\t\treturn \"Error: Invalid Time to Treatment value\"\n\t", "fn_name": "validate_time", "args": [{"name": "Time_to_Treatment", "data_type": "FIELD", "value": "Time to Treatment"}], "lambda_udf_id": "v1:AWS_LAMBDA:1338097570:insaprd-use2-aihub-prd-docker-default-udf:8"}, "msg": {"standard": null, "custom": {"msg": null, "enabled": false}}, "alert_level": "failure", "position": {"x": 115, "y": 115}}], "edges": [{"edge_id": "3510736b-3bcd-4d23-8403-34f6124bf652", "source": "018746cd-07d5-4c1a-a0cd-c57250bd405d", "target": null, "result": "pass"}, {"edge_id": "47efef91-7c7d-4482-9894-002f52c2805b", "source": "018746cd-07d5-4c1a-a0cd-c57250bd405d", "target": null, "result": "fail"}]}, {"rule_id": "4bf48d9d-b5e3-4833-9b50-16005225b129", "rule_name": "Exceptional Uplift Requested UDF", "conditions": [{"condition_id": "792ac625-0363-449e-b866-1d561c42eb97", "type": "lambda_code", "affected_fields": ["Exceptional_Uplift_Requested"], "class_affected_fields": [{"class": "Medical Report", "field": "Exceptional_Uplift_Requested"}], "params": {"code": "\n\ndef validate_uplift_req(Exceptional_Uplift_Requested, context = {}, keys = {}, **kwargs):\n\tvalid_values = ['Yes', 'No']\n\t\n\tif Exceptional_Uplift_Requested in valid_values:\n\t\treturn None\n\telse:\n\t\treturn \"Error: Invalid Exceptional Uplift Requested value!\"\n\t", "fn_name": "validate_uplift_req", "args": [{"name": "Exceptional_Uplift_Requested", "data_type": "FIELD", "value": "Exceptional Uplift Requested"}], "lambda_udf_id": "v1:AWS_LAMBDA:1511891879:insaprd-use2-aihub-prd-docker-default-udf:8"}, "msg": {"standard": null, "custom": {"msg": null, "enabled": false}}, "alert_level": "failure", "position": {"x": 115, "y": 115}}], "edges": [{"edge_id": "10e03ed7-a063-455a-aca1-ff90fae18c72", "source": "792ac625-0363-449e-b866-1d561c42eb97", "target": null, "result": "pass"}, {"edge_id": "112e1400-fe7a-4885-8eb7-08ba8738d9c2", "source": "792ac625-0363-449e-b866-1d561c42eb97", "target": null, "result": "fail"}]}, {"rule_id": "6be66cac-f6d7-4a74-86a9-3c7f10a73d0a", "rule_name": "Exceptional Uplift UDF", "conditions": [{"condition_id": "24811f5a-021b-4697-bc27-3189b5e4196b", "type": "lambda_code", "affected_fields": ["Exceptional_Uplift"], "class_affected_fields": [{"class": "Medical Report", "field": "Exceptional_Uplift"}], "params": {"code": "\n\ndef validate_uplift(Exceptional_Uplift, context = {}, keys = {}, **kwargs):\n\timport traceback\n\t\n\ttry:\n\t\tif Exceptional_Uplift == 'N/A':\n\t\t\treturn None\n\t\n\t\telif Exceptional_Uplift.isnumeric():\n\t\t\tif int(Exceptional_Uplift) in range(1, 10+1):\n\t\t\t\treturn None\n\t\n\texcept Exception:\n\t\tprint(traceback.format_exc())\n\t\n\treturn \"Error: Invalid Exceptional Uplift value!\"\n\t", "fn_name": "validate_uplift", "args": [{"name": "Exceptional_Uplift", "data_type": "FIELD", "value": "Exceptional Uplift"}], "lambda_udf_id": "v1:AWS_LAMBDA:2189349605:insaprd-use2-aihub-prd-docker-default-udf:8"}, "msg": {"standard": null, "custom": {"msg": null, "enabled": false}}, "alert_level": "failure", "position": {"x": 115, "y": 115}}], "edges": [{"edge_id": "a5ce1684-cc50-415d-b678-0153959651e9", "source": "24811f5a-021b-4697-bc27-3189b5e4196b", "target": null, "result": "pass"}, {"edge_id": "def20057-2f6f-47e7-ba66-e2e5a7070497", "source": "24811f5a-021b-4697-bc27-3189b5e4196b", "target": null, "result": "fail"}]}, {"rule_id": "242ab6c7-d357-4da8-83f3-d2437d636698", "rule_name": "Exceptional Uplift Justification UDF", "conditions": [{"condition_id": "69af6305-12ce-4e57-a7b4-51284f4f9f9e", "type": "lambda_code", "affected_fields": ["Exceptional_Uplift_Justification"], "class_affected_fields": [{"class": "Medical Report", "field": "Exceptional_Uplift_Justification"}], "params": {"code": "\n\ndef validate_justification(Exceptional_Uplift_Justification, Exceptional_Uplift_Requested, context = {}, keys = {}, **kwargs):\n\tif Exceptional_Uplift_Requested == 'No': \n\t\tif Exceptional_Uplift_Justification == 'N/A':\n\t\t\treturn None\n\telse:\n\t\tif Exceptional_Uplift_Justification != 'N/A':\n\t\t\treturn None\n\t\n\treturn \"Error: Incorrect Exceptional Uplift Justification\"\n\t", "fn_name": "validate_justification", "args": [{"name": "Exceptional_Uplift_Justification", "data_type": "FIELD", "value": "Exceptional Uplift Justification"}, {"name": "Exceptional_Uplift_Requested", "data_type": "FIELD", "value": "Exceptional Uplift Requested"}], "lambda_udf_id": "v1:AWS_LAMBDA:9587835990:insaprd-use2-aihub-prd-docker-default-udf:8"}, "msg": {"standard": null, "custom": {"msg": null, "enabled": false}}, "alert_level": "failure", "position": {"x": 115, "y": 115}}], "edges": [{"edge_id": "66168d2b-ef12-4d94-a7e7-b66de7cad4b9", "source": "69af6305-12ce-4e57-a7b4-51284f4f9f9e", "target": null, "result": "pass"}, {"edge_id": "c1077b9c-fdc3-4ac1-9157-ddb005908617", "source": "69af6305-12ce-4e57-a7b4-51284f4f9f9e", "target": null, "result": "fail"}]}, {"rule_id": "b6f77ebe-3035-43a4-bd8b-3f4dc14333e2", "rule_name": "Professional ID UDF", "conditions": [{"condition_id": "04c2c676-745f-4dcf-8927-7044afc5eac6", "type": "lambda_code", "affected_fields": ["Professional_ID"], "class_affected_fields": [{"class": "Medical Report", "field": "Professional_ID"}], "params": {"code": "\n\ndef validate_pro_id(Professional_ID, context = {}, keys = {}, **kwargs):\n\timport re\n\t\n\t\n\tif Professional_ID == 'N/A':\n\t\treturn None\n\t\n\tpattern = r'([A-Z]{2}\\d{3}|\\d{7})'\n\tmatch = re.search(pattern, Professional_ID)\n\t\n\tif match and match.group() == Professional_ID:\n\t\treturn None\n\t\n\treturn \"Error: Invalid Professional ID value!\"\n\t", "fn_name": "validate_pro_id", "args": [{"name": "Professional_ID", "data_type": "FIELD", "value": "Professional ID"}], "lambda_udf_id": "v1:AWS_LAMBDA:1645816295:insaprd-use2-aihub-prd-docker-default-udf:8"}, "msg": {"standard": null, "custom": {"msg": null, "enabled": false}}, "alert_level": "failure", "position": {"x": 115, "y": 115}}], "edges": [{"edge_id": "5dd54955-5b01-4066-8651-180fc30ef622", "source": "04c2c676-745f-4dcf-8927-7044afc5eac6", "target": null, "result": "pass"}, {"edge_id": "6cf757db-bc35-428d-a901-e3eca17661e7", "source": "04c2c676-745f-4dcf-8927-7044afc5eac6", "target": null, "result": "fail"}]}, {"rule_id": "35319fc6-ac1f-4e29-a874-25139a8bc868", "rule_name": "Solicitor Suggested Offer UDF", "conditions": [{"condition_id": "a5c9ef7a-d779-42bf-b1d4-6518080ffaf4", "type": "lambda_code", "affected_fields": ["Solicitor_Suggested_Offer"], "class_affected_fields": [{"class": "Medical Report", "field": "Solicitor_Suggested_Offer"}], "params": {"code": "\n\ndef validate_solicitor_suggested_offer(Solicitor_Suggested_Offer, context = {}, keys = {}, **kwargs):\n\tif Solicitor_Suggested_Offer == 'N/A':\n\t  return None\n\t\n\telif isinstance(Solicitor_Suggested_Offer, float):\n\t  if Solicitor_Suggested_Offer.is_integer() and 0 <= Solicitor_Suggested_Offer < 999999999:\n\t    return None\n\t\n\t  else:\n\t    return 'Solicitor Suggested Offer must be an integer less than 999999999 without any decimals.'\n\treturn \"Solicitor Suggested Offer must be 'N/A' or a valid integer less than 999999999 without any decimals.\"\n\t", "fn_name": "validate_solicitor_suggested_offer", "args": [{"name": "Solicitor_Suggested_Offer", "data_type": "FIELD", "value": "Solicitor Suggested Offer"}], "lambda_udf_id": "v1:AWS_LAMBDA:1873183834:insaprd-use2-aihub-prd-docker-default-udf:8"}, "msg": {"standard": null, "custom": {"msg": null, "enabled": false}}, "alert_level": "failure", "position": {"x": 115, "y": 115}}], "edges": [{"edge_id": "9814f988-798e-45f7-8f3b-511eadb9c261", "source": "a5c9ef7a-d779-42bf-b1d4-6518080ffaf4", "target": null, "result": "pass"}, {"edge_id": "d18012fc-857d-4969-a70a-0a98a80fd9db", "source": "a5c9ef7a-d779-42bf-b1d4-6518080ffaf4", "target": null, "result": "fail"}]}], "classification_thresholds": {"per_class": {"enabled": true, "thresholds": {"Medical Report": 0.95}}}}